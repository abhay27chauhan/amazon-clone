{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n};\nexport const ACTIONS = {\n  ADD_TO_BASKET: \"add-to-basket\",\n  REMOVE_FROM_BASKET: \"remove-from-basket\",\n  SET_USER: \"set-user\",\n  EMPTY_BASKET: \"empty-basket\"\n};\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_TO_BASKET:\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case ACTIONS.REMOVE_FROM_BASKET:\n      const index = state.basket.findIndex(basketItem => basketItem.id == action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Can't remove product (id: ${action.id}) as its not in the basket`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    case ACTIONS.SET_USER:\n      return { ...state,\n        user: action.user\n      };\n\n    case ACTIONS.EMPTY_BASKET:\n      return { ...state,\n        basket: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/abhaychauhan/Desktop/amazon-clone/src/Hooks/reducer.js"],"names":["initialState","basket","user","ACTIONS","ADD_TO_BASKET","REMOVE_FROM_BASKET","SET_USER","EMPTY_BASKET","getBasketTotal","reduce","amount","item","price","reducer","state","action","type","index","findIndex","basketItem","id","newBasket","splice","console","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE,EADgB;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAArB;AAKP,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,aAAa,EAAE,eADI;AAEnBC,EAAAA,kBAAkB,EAAE,oBAFD;AAGnBC,EAAAA,QAAQ,EAAE,UAHS;AAInBC,EAAAA,YAAY,EAAE;AAJK,CAAhB;AAOP,OAAO,MAAMC,cAAc,GAAIP,MAAD,IAAYA,MAAZ,aAAYA,MAAZ,uBAAYA,MAAM,CAAEQ,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAsD,CAAtD,CAAnC;;AAEP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,OAAO,CAACC,aAAb;AACI,aAAO,EACH,GAAGU,KADA;AAEHb,QAAAA,MAAM,EAAE,CAAC,GAAGa,KAAK,CAACb,MAAV,EAAkBc,MAAM,CAACJ,IAAzB;AAFL,OAAP;;AAIJ,SAAKR,OAAO,CAACE,kBAAb;AACI,YAAMY,KAAK,GAAGH,KAAK,CAACb,MAAN,CAAaiB,SAAb,CACTC,UAAD,IAAgBA,UAAU,CAACC,EAAX,IAAiBL,MAAM,CAACK,EAD9B,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGP,KAAK,CAACb,MAAV,CAAhB;;AAEA,UAAGgB,KAAK,IAAI,CAAZ,EAAc;AACVI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AACH,OAFD,MAEK;AACDM,QAAAA,OAAO,CAACC,IAAR,CAAc,6BAA4BT,MAAM,CAACK,EAAG,4BAApD;AACH;;AAED,aAAO,EACH,GAAGN,KADA;AAEHb,QAAAA,MAAM,EAAEoB;AAFL,OAAP;;AAKJ,SAAKlB,OAAO,CAACG,QAAb;AACI,aAAM,EACF,GAAGQ,KADD;AAEFZ,QAAAA,IAAI,EAAEa,MAAM,CAACb;AAFX,OAAN;;AAIJ,SAAKC,OAAO,CAACI,YAAb;AACI,aAAO,EACH,GAAGO,KADA;AAEHb,QAAAA,MAAM,EAAE;AAFL,OAAP;;AAIJ;AACI,aAAOa,KAAP;AAlCR;AAoCH,CArCD;;AAuCA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n    basket: [],\n    user: null\n}\n\nexport const ACTIONS = {\n    ADD_TO_BASKET: \"add-to-basket\",\n    REMOVE_FROM_BASKET: \"remove-from-basket\",\n    SET_USER: \"set-user\",\n    EMPTY_BASKET: \"empty-basket\"\n}\n\nexport const getBasketTotal = (basket) => basket?.reduce((amount, item) => item.price + amount, 0)\n\nconst reducer = (state, action) => {\n    switch(action.type){\n        case ACTIONS.ADD_TO_BASKET:\n            return {\n                ...state,\n                basket: [...state.basket, action.item]\n            }\n        case ACTIONS.REMOVE_FROM_BASKET:\n            const index = state.basket.findIndex(\n                (basketItem) => basketItem.id == action.id\n            )\n            let newBasket = [...state.basket];\n\n            if(index >= 0){\n                newBasket.splice(index, 1);\n            }else{\n                console.warn(`Can't remove product (id: ${action.id}) as its not in the basket`);\n            }\n\n            return {\n                ...state,\n                basket: newBasket\n            }\n\n        case ACTIONS.SET_USER:\n            return{\n                ...state,\n                user: action.user\n            }\n        case ACTIONS.EMPTY_BASKET:\n            return {\n                ...state,\n                basket: []\n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}