{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/abhaychauhan/Downloads/Projects/React/amazon-clone/src/Hooks/stateProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from 'react'; // Prepares the dataLayer\n\nconst StateContext = /*#__PURE__*/createContext(); // Wrap our app and Provide the Data layer\n\nexport function StateProvider({\n  reducer,\n  initialState,\n  children\n}) {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: useReducer(reducer, initialState),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n} // pull information from the data layer\n\n_s(StateProvider, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n\n_c = StateProvider;\nexport const useStateValue = () => {\n  _s2();\n\n  return useContext(StateContext);\n};\n\n_s2(useStateValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"sources":["/Users/abhaychauhan/Downloads/Projects/React/amazon-clone/src/Hooks/stateProvider.js"],"names":["React","createContext","useContext","useReducer","StateContext","StateProvider","reducer","initialState","children","useStateValue"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA8BC,UAA9B,EAA0CC,UAA1C,QAA4D,OAA5D,C,CAEA;;AACA,MAAMC,YAAY,gBAAGH,aAAa,EAAlC,C,CAEA;;AACA,OAAO,SAASI,aAAT,CAAuB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,YAAX;AAAyBC,EAAAA;AAAzB,CAAvB,EAA0D;AAAA;;AAC7D,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEL,UAAU,CAACG,OAAD,EAAUC,YAAV,CAAxC;AAAA,cACKC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,C,CAED;;GARgBH,a;;KAAAA,a;AAShB,OAAO,MAAMI,aAAa,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACE,YAAD,CAAhB;AAAA,CAAtB;;IAAMK,a","sourcesContent":["import React, {createContext, useContext, useReducer } from 'react';\n\n// Prepares the dataLayer\nconst StateContext = createContext();\n\n// Wrap our app and Provide the Data layer\nexport function StateProvider({ reducer, initialState, children}){\n    return (\n        <StateContext.Provider value={useReducer(reducer, initialState)}>\n            {children}\n        </StateContext.Provider>\n    )\n}\n\n// pull information from the data layer\nexport const useStateValue = () => useContext(StateContext);"]},"metadata":{},"sourceType":"module"}