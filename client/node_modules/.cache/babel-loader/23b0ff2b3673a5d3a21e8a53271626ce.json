{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/abhaychauhan/Desktop/amazon-clone/src/pages/Payment/Payment.js\",\n    _s = $RefreshSig$();\n\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport React, { useState, useEffect } from 'react';\nimport CurrencyFormat from 'react-currency-format';\nimport { Link, useHistory } from 'react-router-dom';\nimport CheckoutProduct from '../../components/CheckoutProduct/CheckoutProduct';\nimport { ACTIONS, getBasketTotal } from '../../Hooks/reducer';\nimport { useStateValue } from '../../Hooks/stateProvider';\nimport axios from '../../axios';\nimport './Payment.css';\nimport { db } from '../../firebase';\n\nfunction Payment() {\n  _s();\n\n  const [{\n    basket,\n    user\n  }, dispatch] = useStateValue();\n  const history = useHistory();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [processing, setProcessing] = useState(false);\n  const [succeeded, setSucceeded] = useState(false);\n  const [clientSecret, setClientSecret] = useState(true);\n  useEffect(() => {\n    const getClientSecret = async () => {\n      const response = await axios({\n        method: 'post',\n        url: `/payments/create?total=${getBasketTotal(basket) * 100}`\n      });\n      setClientSecret(response.data.clientSecret);\n    };\n\n    getClientSecret();\n  }, [basket]);\n  console.log('THE SECRET IS >>>', clientSecret);\n  console.log('THE USER >> ', user);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    }).then(({\n      paymentIntent\n    }) => {\n      // paymentIntent = payment confirmation\n      db.collection('users').doc(user === null || user === void 0 ? void 0 : user.uid).collection('order').doc(paymentIntent.id).set({\n        basket: basket,\n        amount: paymentIntent.amount,\n        created: paymentIntent.created\n      });\n      setSucceeded(true);\n      setError(null);\n      setProcessing(false);\n      dispatch({\n        type: ACTIONS.EMPTY_BASKET\n      });\n      history.replace('/orders');\n    });\n  };\n\n  const handleChange = event => {\n    // listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Checkout (\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/checkout\",\n          children: [basket === null || basket === void 0 ? void 0 : basket.length, \" items\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 31\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Delivery Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__address\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: user === null || user === void 0 ? void 0 : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"123 React Lane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Delhi, India\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Review items and delivery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__items\",\n          children: basket.map(({\n            id,\n            ...otherItemProps\n          }) => /*#__PURE__*/_jsxDEV(CheckoutProduct, {\n            id: id,\n            ...otherItemProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 67\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment__section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__title\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Payment Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"payment__details\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(CardElement, {\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"payment__priceContainer\",\n              children: [/*#__PURE__*/_jsxDEV(CurrencyFormat, {\n                renderText: value => /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Order Total: \", value]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 41\n                }, this),\n                decimalScale: 2,\n                value: getBasketTotal(basket),\n                displayType: \"text\",\n                thousandSeparator: true,\n                prefix: \"$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: processing || disabled || succeeded,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: processing ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Processing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 61\n                  }, this) : \"Buy Now\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Payment, \"GeGDhh8u+EPFM12ztkUYYR/WK7g=\", false, function () {\n  return [useStateValue, useHistory, useStripe, useElements];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/Users/abhaychauhan/Desktop/amazon-clone/src/pages/Payment/Payment.js"],"names":["CardElement","useElements","useStripe","React","useState","useEffect","CurrencyFormat","Link","useHistory","CheckoutProduct","ACTIONS","getBasketTotal","useStateValue","axios","db","Payment","basket","user","dispatch","history","stripe","elements","error","setError","disabled","setDisabled","processing","setProcessing","succeeded","setSucceeded","clientSecret","setClientSecret","getClientSecret","response","method","url","data","console","log","handleSubmit","event","preventDefault","payload","confirmCardPayment","payment_method","card","getElement","then","paymentIntent","collection","doc","uid","id","set","amount","created","type","EMPTY_BASKET","replace","handleChange","empty","message","length","email","map","otherItemProps","value"],"mappings":"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","sourcesContent":["import { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport React, { useState, useEffect } from 'react';\nimport CurrencyFormat from 'react-currency-format';\nimport { Link, useHistory } from 'react-router-dom';\nimport CheckoutProduct from '../../components/CheckoutProduct/CheckoutProduct';\nimport { ACTIONS, getBasketTotal } from '../../Hooks/reducer';\nimport { useStateValue } from '../../Hooks/stateProvider';\nimport axios from '../../axios';\nimport './Payment.css';\nimport { db } from '../../firebase';\n\nfunction Payment() {\n    const[{basket, user}, dispatch] = useStateValue();\n\n    const history = useHistory();\n    \n    const stripe = useStripe();\n    const elements = useElements();\n\n    const[error, setError] = useState(null);\n    const[disabled, setDisabled] = useState(true);\n    const[processing, setProcessing] = useState(false);\n    const[succeeded, setSucceeded] = useState(false);\n    const[clientSecret, setClientSecret] = useState(true);\n\n    useEffect(() => {\n        const getClientSecret = async () => {\n            const response = await axios({\n                method: 'post',\n                url: `/payments/create?total=${getBasketTotal(basket) * 100}`,\n            });\n            setClientSecret(response.data.clientSecret)\n        }\n\n        getClientSecret();\n    }, [basket])\n\n    console.log('THE SECRET IS >>>', clientSecret);\n    console.log('THE USER >> ', user);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setProcessing(true);\n\n        const payload = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n                card: elements.getElement(CardElement)\n            }\n        }).then(({ paymentIntent }) => {\n            // paymentIntent = payment confirmation\n\n            db\n            .collection('users')\n            .doc(user?.uid)\n            .collection('order')\n            .doc(paymentIntent.id)\n            .set({\n                basket: basket,\n                amount: paymentIntent.amount,\n                created: paymentIntent.created\n            })\n\n            setSucceeded(true);\n            setError(null);\n            setProcessing(false);\n\n            dispatch({\n                type: ACTIONS.EMPTY_BASKET\n            })\n\n            history.replace('/orders');\n        })\n    }\n\n    const handleChange = event => {\n        // listen for changes in the CardElement\n        // and display any errors as the customer types their card details\n        setDisabled(event.empty);\n        setError(event.error ? event.error.message : \"\");\n    }\n    \n    return (\n        <div className=\"payment\">\n            <div className=\"payment__container\">\n                <h1>\n                    Checkout (<Link to='/checkout'>{basket?.length} items</Link>)\n                </h1>\n                <div className=\"payment__section\">\n                    <div className=\"payment__title\">\n                        <h3>Delivery Address</h3>\n                    </div>\n                    <div className=\"payment__address\">\n                        <p>{user?.email}</p>\n                        <p>123 React Lane</p>\n                        <p>Delhi, India</p>\n                    </div>\n                </div>\n                <div className=\"payment__section\">\n                    <div className=\"payment__title\">\n                        <h3>Review items and delivery</h3>\n                    </div>\n                    <div className=\"payment__items\">\n                        {basket.map(({id, ...otherItemProps}) => (<CheckoutProduct id = {id} {...otherItemProps}/>))}\n                    </div>\n                </div>\n                <div className=\"payment__section\">\n                    <div className=\"payment__title\">\n                        <h3>Payment Method</h3>\n                    </div>\n                    <div className=\"payment__details\">\n                        <form onSubmit={handleSubmit}>\n                            <CardElement onChange={handleChange} />\n                            <div className=\"payment__priceContainer\">\n                                <CurrencyFormat\n                                    renderText = {(value) => (\n                                        <h3>Order Total: {value}</h3>       \n                                    )}\n                                    decimalScale={2}\n                                    value={getBasketTotal(basket)}\n                                    displayType={\"text\"}\n                                    thousandSeparator={true}\n                                    prefix={\"$\"}\n                                />\n                                <button disabled={processing || disabled || succeeded}>\n                                        <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\n                                </button>\n                            </div>\n                                {error && <div>{error}</div>}\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Payment;\n"]},"metadata":{},"sourceType":"module"}