{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/abhaychauhan/Desktop/amazon-clone/src/pages/Orders/Orders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Orders.css';\nimport { db } from '../../firebase';\nimport { useStateValue } from '../../Hooks/stateProvider';\nimport Order from '../../components/Order/Order';\n\nfunction Orders() {\n  _s();\n\n  const [{\n    basket,\n    user\n  }, dispatch] = useStateValue();\n  const [orders, setOrders] = useState([]);\n  useEffect(() => {\n    if (user) {\n      db.collection('users').doc(user === null || user === void 0 ? void 0 : user.uid).collection('orders').orderBy('created', 'desc').onSnapshot(snapshot => setOrders(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      }))));\n    } else {\n      setOrders([]);\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orders\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders__order\",\n      children: orders === null || orders === void 0 ? void 0 : orders.map(order => {\n        /*#__PURE__*/\n        _jsxDEV(Order, {\n          order: order\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Orders, \"kJu/TmVAC66H+5D7gmcI37VsnOo=\", false, function () {\n  return [useStateValue];\n});\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["/Users/abhaychauhan/Desktop/amazon-clone/src/pages/Orders/Orders.js"],"names":["React","useEffect","useState","db","useStateValue","Order","Orders","basket","user","dispatch","orders","setOrders","collection","doc","uid","orderBy","onSnapshot","snapshot","docs","map","id","data","order"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,cAAP;AACA,SAASC,EAAT,QAAmB,gBAAnB;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,KAAP,MAAkB,8BAAlB;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAK,CAAC;AAACC,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAD,EAAiBC,QAAjB,IAA6BL,aAAa,EAA/C;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGO,IAAH,EAAQ;AACJL,MAAAA,EAAE,CACDS,UADD,CACY,OADZ,EAECC,GAFD,CAEKL,IAFL,aAEKA,IAFL,uBAEKA,IAAI,CAAEM,GAFX,EAGCF,UAHD,CAGY,QAHZ,EAICG,OAJD,CAIS,SAJT,EAIoB,MAJpB,EAKCC,UALD,CAKYC,QAAQ,IAChBN,SAAS,CAACM,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBN,GAAG,KAAK;AAChCO,QAAAA,EAAE,EAAEP,GAAG,CAACO,EADwB;AAEhCC,QAAAA,IAAI,EAAER,GAAG,CAACQ,IAAJ;AAF0B,OAAL,CAArB,CAAD,CANb;AAWH,KAZD,MAYK;AAEDV,MAAAA,SAAS,CAAC,EAAD,CAAT;AACH;AACJ,GAjBQ,EAiBN,CAACH,IAAD,CAjBM,CAAT;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACKE,MADL,aACKA,MADL,uBACKA,MAAM,CAAES,GAAR,CAAYG,KAAK,IAAI;AAClB;AAAA,gBAAC,KAAD;AAAO,UAAA,KAAK,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA;AACH,OAFA;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAjCQhB,M;UAC6BF,a;;;KAD7BE,M;AAmCT,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Orders.css';\nimport { db } from '../../firebase';\nimport { useStateValue } from '../../Hooks/stateProvider';\nimport Order from '../../components/Order/Order';\n\nfunction Orders() {\n    const[{basket, user}, dispatch] = useStateValue();\n    const [orders, setOrders] = useState([]);\n    \n    useEffect(() => {\n        if(user){\n            db\n            .collection('users')\n            .doc(user?.uid)\n            .collection('orders')\n            .orderBy('created', 'desc')\n            .onSnapshot(snapshot => (\n                setOrders(snapshot.docs.map(doc => ({\n                    id: doc.id,\n                    data: doc.data()\n                })))\n            ))\n        }else{\n            \n            setOrders([])\n        }\n    }, [user])\n\n    return (\n        <div className=\"orders\">\n            <h1>Your Orders</h1>\n            <div className='orders__order'>\n                {orders?.map(order => {\n                    <Order order={order}/>\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default Orders;\n"]},"metadata":{},"sourceType":"module"}